version: "3.9"

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-pv_management}
      POSTGRES_USER: ${DB_USERNAME:-pv_app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pv_app}
    volumes:
      - /mnt/db/postgres:/var/lib/postgresql/data
    networks:
      - appnet

  backend:
    image: europe-west1-docker.pkg.dev/pv-management-app/pv-management-app-repo/backend:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-pv_management}
      DB_USERNAME: ${DB_USERNAME:-pv_app}
      DB_PASSWORD: ${DB_PASSWORD:-pv_app}
      SEMS_ACCOUNT: ${SEMS_ACCOUNT}
      SEMS_PASSWORD: ${SEMS_PASSWORD}
      SEMS_STATION_ID: ${SEMS_STATION_ID}
      JWT_SECRET: ${JWT_SECRET:-dev-secret}
      APP_ADMIN_EMAIL: ${APP_ADMIN_EMAIL:-admin@example.com}
      APP_ADMIN_PASSWORD: ${APP_ADMIN_PASSWORD:-super-secret-password}
    ports:
      - "8080:8080"
    networks:
      - appnet

  frontend:
    image: europe-west1-docker.pkg.dev/pv-management-app/pv-management-app-repo/frontend:latest
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      # Often FE is static; if using Nginx, point it to backend URL:
      API_URL: "http://localhost:8080"
    ports:
      - "80:80"
    networks:
      - appnet

networks:
  appnet:
    driver: bridge