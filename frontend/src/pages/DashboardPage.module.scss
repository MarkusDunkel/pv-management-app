@use '@/styles/abstracts/variables' as vars;
@use '@/styles/abstracts/mixins' as mixins;

@keyframes moveAlongBorderLeft {
  from {
    left: 0;
  }
  to {
    left: 90%;
  }
}

@keyframes moveAlongBorderRight {
  from {
    left: 0;
  }
  to {
    left: 90%;
  }
}

@keyframes moveAlongBorderTop {
  from {
    top: 0;
  }
  to {
    top: 90%;
  }
}

@keyframes moveAlongBorderBottom {
  from {
    top: 0;
  }
  to {
    top: 90%;
  }
}

.dashboard-page {
  &__layout {
    grid-template-rows: minmax(350px, 1fr) minmax(200px, 1fr);
    height: 100%;
  }

  &__hero-card {
    display: flex;
    gap: 1.5rem;
    padding: 1.5rem;
    border-radius: vars.$radius-lg;
    background: linear-gradient(135deg, rgba(vars.$color-primary-rgb, 0.12), #ffffff);
    border: 1px solid vars.$color-border;
    @include mixins.card-shadow;
  }

  &__battery-card {
    align-self: stretch;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: fit-content;
    min-height: 0;
    width: 300px;
  }

  &__status-card {
    align-self: stretch;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: fit-content;
    min-height: 0;
    width: 300px;

    &__heading-unit {
      display: flex;
      justify-content: flex-start;
      flex-wrap: nowrap;
    }

    &--success {
      svg {
        color: vars.$color-success;
      }
    }

    &--error {
      svg {
        color: vars.$color-error;
      }
    }
  }

  &__battery-meta {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  &__battery-meta-value {
    font-size: 2.5rem;
    font-weight: 700;
  }

  &__stat-grid {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  }

  &__stat-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    border-radius: vars.$radius-lg;
    background: rgba(255, 255, 255, 0.72);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.4);
  }

  &__stat-label {
    font-size: 0.875rem;
    color: vars.$color-text-muted;
  }

  &__stat-value {
    font-size: 1.25rem;
    font-weight: 600;
  }

  &__chart-card {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    height: 100%;
    min-height: 0;
  }

  &__chart-wrapper {
    width: 100%;
    flex: 1;

    :global(.recharts-responsive-container) {
      height: 100% !important;
    }
  }

  @media (max-width: 768px) {
    &__hero-card {
      padding: 1.5rem;
    }
  }

  @media (min-width: 992px) {
    &__hero-card {
      grid-template-columns: minmax(0, 1fr) minmax(260px, 320px);
    }
  }
}

.flow-chart {
  $padding: 40px;
  $chevron-size: 20px;
  $border-width: 2.5px;
  $move-icons-out: 5px;
  $graph-tilt: 25deg;

  display: flex;
  flex-direction: column;
  height: 100%;
  aspect-ratio: 1 / 1;
  transform: rotate($graph-tilt);

  &__row {
    display: flex;
    width: 100%;
    height: 100%;
  }

  &__segment {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
    border: $border-width solid white;

    &--upper-left {
      border-top-color: transparent;
      border-left-color: transparent;
    }

    &--upper-right {
      border-right-color: transparent;
      border-top-color: transparent;
    }

    &--lower-left {
      border-left-color: transparent;
      border-bottom-color: transparent;
    }

    &--lower-right {
      border-right-color: transparent;
      border-bottom-color: transparent;
    }
  }

  &__center-overlay {
    position: absolute;
    bottom: calc(30px * -0.5 - $border-width);
    right: calc(30px * -0.5 - $border-width);
    width: 30px;
    height: 30px;
    background: vars.$color-grey;
    z-index: 1000;
    border-radius: 5px;
  }

  &__chevron {
    position: absolute;
    z-index: 1;
    width: $chevron-size;
    height: $chevron-size;
    color: vars.$color-text;

    &--left {
      bottom: calc(-0.5 * $chevron-size - $border-width);
      left: 0;
      animation-name: moveAlongBorderLeft;
      animation-duration: var(--duration-chevronLeft);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    &--top {
      top: 0;
      left: calc($chevron-size * -0.5 - $border-width);
      transform: rotate(90deg);
      animation-name: moveAlongBorderTop;
      animation-duration: var(--duration-chevronTop);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    &--bottom {
      top: 0;
      right: calc($chevron-size * -0.5 - $border-width);
      transform: rotate(90deg);
      animation-name: moveAlongBorderBottom;
      animation-duration: var(--duration-chevronBottom);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    &--right {
      top: calc($chevron-size * -0.5 - $border-width);
      right: 0;
      animation-name: moveAlongBorderRight;
      animation-duration: var(--duration-chevronRight);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }
  }

  @for $i from 0 through 5 {
    &__chevron--left:nth-child(#{$i + 1}) {
      animation-delay: calc(var(--duration-chevronLeft, 4s) * -1 / 3 * #{$i});
    }

    &__chevron--top:nth-child(#{$i + 1}) {
      animation-delay: calc(var(--duration-chevronTop, 4s) * -1 / 3 * #{$i});
    }

    &__chevron--bottom:nth-child(#{$i + 1}) {
      animation-delay: calc(var(--duration-chevronBottom, 4s) * -1 / 3 * #{$i});
    }

    &__chevron--right:nth-child(#{$i + 1}) {
      animation-delay: calc(var(--duration-chevronRight, 4s) * -1 / 3 * #{$i});
    }
  }

  &__value-box {
    position: absolute;
    height: 30px;
    width: fit-content;
    line-height: 19px;
    padding: 5px;
    border-radius: 20px;
    background: white;
    transform: rotate(-$graph-tilt);

    &--grid {
      top: 17px;
      right: -7px;
      border: 1px solid vars.$color-grid;
      padding-left: 10px;
      padding-right: 30px;
    }

    &--solar {
      bottom: 18px;
      left: 5px;
      border: 1px solid vars.$color-solar;
      padding-left: 30px;
      padding-right: 10px;
    }

    &--load {
      bottom: 17px;
      left: -10px;
      border: 1px solid vars.$color-load;
      padding-left: 30px;
      padding-right: 10px;
    }

    &--battery {
      top: 10px;
      right: 5px;
      border: 1px solid vars.$color-battery;
      padding-left: 10px;
      padding-right: 30px;
    }
  }

  &__icon {
    position: absolute;
    width: $padding;
    height: $padding;
    padding: 5px;
    border: 2px solid black;
    border-radius: 50%;
    background: white;
    transform: rotate(-$graph-tilt);
    overflow: hidden;
    z-index: 1000;

    &--pv {
      top: calc($padding * -0.5);
      left: -$move-icons-out;
      color: vars.$color-solar;
      border-color: vars.$color-solar;
    }

    &--battery {
      bottom: calc($padding * -0.5);
      right: -$move-icons-out;
      color: vars.$color-battery;
      border-color: vars.$color-battery;
    }

    &--load {
      bottom: -$move-icons-out;
      left: calc($padding * -0.5);
      color: vars.$color-load;
      border-color: vars.$color-load;
    }

    &--grid {
      top: -$move-icons-out;
      right: calc($padding * -0.5);
      color: vars.$color-grid;
      border-color: vars.$color-grid;
    }
  }

  &__icon-wrapper {
    position: relative;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &__icon-decorator {
    position: absolute;
    bottom: -10px;
    right: -10px;
    overflow: hidden;
  }
}
