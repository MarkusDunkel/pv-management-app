@use '@/styles/abstracts/variables' as vars;
@use '@/styles/abstracts/mixins' as mixins;

@keyframes moveAlongBorderLeft {
  from {
    left: 0;
  }
  to {
    left: 90%;
  }
}

@keyframes moveAlongBorderRight {
  from {
    left: 0;
  }
  to {
    left: 90%;
  }
}

@keyframes moveAlongBorderTop {
  from {
    top: 0;
  }
  to {
    top: 90%;
  }
}

@keyframes moveAlongBorderBottom {
  from {
    top: 0;
  }
  to {
    top: 90%;
  }
}

.dashboardLayout {
  grid-template-columns: 1fr;
  grid-template-rows: fit-content 1fr;
}

.heroCard {
  padding: 2rem;
  border-radius: vars.$radius-lg;
  background: linear-gradient(135deg, rgba(vars.$color-primary-rgb, 0.12), #ffffff);
  border: 1px solid vars.$color-border;
  @include mixins.card-shadow;
  display: flex;
  gap: 1.5rem;
  height: fit-content;
}

.heroBatteryCard {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  height: fit-content;
  min-height: 0;
}

.statGrid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
}

.flowChart {
  $padding: 40px;
  $chevronSize: 20px;
  $borderWidth: 2.5px;
  $moveIconsOut: 5px;
  $graphTilt: 25deg;

  display: flex;
  flex-grow: 0;
  aspect-ratio: 1 / 1;
  flex-direction: column;
  height: 300px;
  width: 300px;
  transform: rotate($graphTilt);

  .arrow {
    position: absolute;
    height: $chevronSize;
    width: $chevronSize;
    z-index: 1;
    color: vars.$color-text;
  }

  .valueBox {
    position: absolute;
    background: white;
    transform: rotate(-$graphTilt);
    height: 30px;
    width: fit-content;
    line-height: 19px;
    padding: 5px;
    border-radius: 20px;
  }

  .valueBoxLeft {
    padding-right: 30px;
    padding-left: 10px;
  }

  .valueBoxRight {
    padding-left: 30px;
    padding-right: 10px;
  }

  .flowChart__firstRow {
    display: flex;
    width: 100%;
    height: 100%;
  }

  .flowChart__secondRow {
    display: flex;
    width: 100%;
    height: 100%;
  }

  .flowChart__upperLeft {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;

    border: $borderWidth solid white;
    border-top-color: transparent;
    border-left-color: transparent;

    .flowChart__centerOverlay {
      position: absolute;
      bottom: calc(30px * -0.5 - $borderWidth);
      right: calc(30px * -0.5 - $borderWidth);
      width: 30px;
      height: 30px;
      background: vars.$color-grey;
      z-index: 1000;
      border-radius: 5px;
    }

    .chevronLeft {
      @extend .arrow;
      position: absolute;
      bottom: calc(-0.5 * $chevronSize - $borderWidth);
      left: 0;
      width: $chevronSize;
      height: $chevronSize;
      animation-name: moveAlongBorderLeft;
      animation-duration: var(--duration-chevronLeft);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    @for $i from 0 through 5 {
      .chevronLeft:nth-child(#{$i + 1}) {
        $fraction: 5;
        animation-delay: calc(var(--duration-chevronLeft, 4s) * -1 / 3 * #{$i});
      }
    }

    .flowChart__valueBoxGrid {
      @extend .valueBox;
      @extend .valueBoxLeft;
      top: 21px;
      right: -7px;
      border: 1px solid vars.$color-grid;
    }

    .flowChart__valueBoxSolar {
      @extend .valueBox;
      @extend .valueBoxRight;
      border: 1px solid vars.$color-solar;
      bottom: 18px;
      left: 5px;
    }
  }

  .icon {
    position: absolute;
    width: $padding;
    height: $padding;
    background: white;
    z-index: 1000;
    transform: rotate(-$graphTilt);
    border: 2px solid black;
    border-radius: 50%;
    padding: 5px;
    overflow: hidden;
  }

  .iconPv {
    @extend .icon;
    top: calc($padding * -0.5);
    left: -$moveIconsOut;
    color: vars.$color-solar;
    border-color: vars.$color-solar;
  }

  .iconBattery {
    @extend .icon;
    bottom: calc($padding * -0.5);
    right: -$moveIconsOut;
    color: vars.$color-battery;
    border-color: vars.$color-battery;
  }

  .iconLoad {
    @extend .icon;
    bottom: -$moveIconsOut;
    left: calc($padding * -0.5);
    color: vars.$color-load;
    border-color: vars.$color-load;
  }

  .iconGrid {
    @extend .icon;
    top: -$moveIconsOut;
    right: calc($padding * -0.5);
    color: vars.$color-grid;
    border-color: vars.$color-grid;
  }

  .iconPvContainer {
    position: relative;
    left: 0;
    width: 100%;
    height: 100%;

    .iconPvContainer__decorator {
      position: absolute;
      bottom: -10px;
      right: -10px;
      overflow: hidden;
    }
  }

  .flowChart__upperRight {
    display: flex;
    position: relative;

    width: 100%;
    height: 100%;
    border: $borderWidth solid white;
    border-right-color: transparent;
    border-top-color: transparent;

    .chevronTop {
      @extend .arrow;
      top: 0;
      left: calc($chevronSize * -0.5 - $borderWidth);
      width: $chevronSize;
      height: $chevronSize;
      transform: rotate(90deg);
      animation-name: moveAlongBorderTop;
      animation-duration: var(--duration-chevronTop);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    @for $i from 0 through 5 {
      .chevronTop:nth-child(#{$i + 1}) {
        $fraction: 5;
        animation-delay: calc(var(--duration-chevronTop, 4s) * -1 / 3 * #{$i});
      }
    }
  }

  .flowChart__lowerLeft {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
    border: $borderWidth solid white;
    border-left-color: transparent;
    border-bottom-color: transparent;

    .chevronBottom {
      @extend .arrow;
      top: 0;
      right: calc($chevronSize * -0.5 - $borderWidth);
      width: $chevronSize;
      height: $chevronSize;
      transform: rotate(90deg);
      animation-name: moveAlongBorderBottom;
      animation-duration: var(--duration-chevronBottom);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    @for $i from 0 through 5 {
      .chevronBottom:nth-child(#{$i + 1}) {
        $fraction: 5;
        animation-delay: calc(var(--duration-chevronBottom, 4s) * -1 / 3 * #{$i});
      }
    }
  }

  .flowChart__lowerRight {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
    border: $borderWidth solid white;
    border-right-color: transparent;
    border-bottom-color: transparent;

    .chevronRight {
      @extend .arrow;
      top: calc($chevronSize * -0.5 + $borderWidth);
      right: 0;
      width: $chevronSize;
      height: $chevronSize;
      animation-name: moveAlongBorderRight;
      animation-duration: var(--duration-chevronRight);
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }

    @for $i from 0 through 5 {
      .chevronRight:nth-child(#{$i + 1}) {
        $fraction: 5;
        animation-delay: calc(var(--duration-chevronRight, 4s) * -1 / 3 * #{$i});
      }
    }

    .flowChart__valueBoxLoad {
      @extend .valueBox;
      @extend .valueBoxRight;
      bottom: 22px;
      left: -10px;
      border: 1px solid vars.$color-load;
    }

    .flowChart__valueBoxBattery {
      @extend .valueBox;
      @extend .valueBoxLeft;
      top: 10px;
      right: 5px;
      border: 1px solid vars.$color-battery;
    }
  }
}

.statCard {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  border-radius: vars.$radius-lg;
  background: rgba(255, 255, 255, 0.72);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.4);
}

.statLabel {
  font-size: 0.875rem;
  color: vars.$color-text-muted;
}

.statValue {
  font-size: 1.25rem;
  font-weight: 600;
}

.chartCard {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  height: 100%;
  min-height: 0;
}

.chartWrapper {
  width: 100%;
  min-height: 320px;
  flex: 1;
}

.chartWrapper :global(.recharts-responsive-container) {
  height: 100% !important;
}

@media (max-width: 768px) {
  .heroCard {
    padding: 1.5rem;
  }
}

@media (min-width: 992px) {
  .heroCard {
    grid-template-columns: minmax(0, 1fr) minmax(260px, 320px);
  }
}
